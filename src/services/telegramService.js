// Telegram Bot API —Å–µ—Ä–≤–∏—Å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —ç–∫—Å–ø–ª–∏–∫–∞—Ü–∏–∏ –≤ PDF
const TELEGRAM_BOT_TOKEN = '8304590877:AAEfblij32-TzdrBtCa4HNEyTu84ADUW4wY';
const TELEGRAM_CHAT_ID = '522977101'; //  845494093
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
const sendTelegramMessage = async (message) => {
  const response = await fetch(`${TELEGRAM_API_URL}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: TELEGRAM_CHAT_ID,
      text: message,
      parse_mode: 'HTML'
    })
  });

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  return await response.json();
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
export const formatExplanatoryData = (formData) => {
  const { objectType, totalArea, roomsCount, selectedRooms, roomsData } = formData;
  
  const objectTypeNames = {
    'apartment': '–ö–≤–∞—Ä—Ç–∏—Ä–∞',
    'studio': '–°—Ç—É–¥–∏—è', 
    'house': '–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º',
    'commercial': '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ'
  };

  const roomNames = {
    'living-room': '–ì–æ—Å—Ç–∏–Ω–∞—è',
    'kitchen': '–ö—É—Ö–Ω—è',
    'bedroom': '–°–ø–∞–ª—å–Ω—è',
    'bathroom': '–í–∞–Ω–Ω–∞—è',
    'toilet': '–¢—É–∞–ª–µ—Ç',
    'hallway': '–ü—Ä–∏—Ö–æ–∂–∞—è',
    'balcony': '–ë–∞–ª–∫–æ–Ω',
    'dressing-room': '–ì–∞—Ä–¥–µ—Ä–æ–±–Ω–∞—è'
  };

  let message = `üè† <b>–≠–ö–°–ü–õ–ò–ö–ê–¶–ò–Ø –ü–û–ú–ï–©–ï–ù–ò–ô –ü–û –ì–û–°–¢ 21.501-2018</b>\n\n`;
  message += `üìã <b>–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞:</b> ${objectTypeNames[objectType] || objectType}\n`;
  message += `üìê <b>–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å:</b> ${totalArea} –º¬≤\n`;
  message += `üö™ <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:</b> ${roomsCount}\n\n`;
  
  message += `üìä <b>–î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –ü–û–ú–ï–©–ï–ù–ò–ô:</b>\n`;
  
  let totalCalculatedArea = 0;
  
  selectedRooms.forEach(roomId => {
    const roomData = roomsData[roomId] || {};
    const roomName = roomNames[roomId] || roomId;
    const area = roomData.area || '0.0';
    totalCalculatedArea += parseFloat(area);
    
    message += `‚Ä¢ ${roomName}: ${area} –º¬≤`;
    
    if (roomData.length && roomData.width) {
      message += ` (${roomData.length}–º √ó ${roomData.width}–º)`;
    }
    
    if (roomData.height) {
      message += `, –≤—ã—Å–æ—Ç–∞: ${roomData.height}–º`;
    }
    
    if (roomData.purpose) {
      message += `\n  –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: ${roomData.purpose}`;
    }
    
    if (roomData.requirements) {
      message += `\n  –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${roomData.requirements}`;
    }
    
    message += `\n`;
  });
  
  message += `\nüìà <b>–ò–¢–û–ì–û:</b> ${totalCalculatedArea.toFixed(1)} –º¬≤\n\n`;
  message += `üìÖ <b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</b> ${new Date().toLocaleString('ru-RU')}\n`;
  message += `üîó <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> –î–∏–∑–∞–π–Ω360 - –≠–∫—Å–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ–º–µ—â–µ–Ω–∏–π`;

  return message;
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ —ç–∫—Å–ø–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
export const sendExplanatoryToTelegram = async (formData) => {
  try {
    const message = formatExplanatoryData(formData);
    await sendTelegramMessage(message);
    return { success: true, message: '–≠–∫—Å–ø–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!' };
  } catch (error) {
    return { success: false, message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram', error: error.message };
  }
};

